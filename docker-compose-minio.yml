version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio-storage
    ports:
      - "9000:9000"      
      - "9001:9001"      
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_REGION: us-east-1
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin123;
      echo 'Creating buckets...';
      /usr/bin/mc mb --ignore-existing minio/dc-ag-content-files;
      /usr/bin/mc mb --ignore-existing minio/dc-ag-source-files;
      /usr/bin/mc mb --ignore-existing minio/dc-ag-summary-files;
      /usr/bin/mc mb --ignore-existing minio/dc-ag-cache;
      /usr/bin/mc mb --ignore-existing minio/dc-ag-tmp-files;
      echo 'Setting bucket policies to public read...';
      /usr/bin/mc anonymous set public minio/dc-ag-content-files;
      /usr/bin/mc anonymous set public minio/dc-ag-source-files;
      /usr/bin/mc anonymous set public minio/dc-ag-summary-files;
      /usr/bin/mc anonymous set public minio/dc-ag-cache;
      /usr/bin/mc anonymous set public minio/dc-ag-tmp-files;
      echo 'MinIO setup completed successfully!';
      "
    networks:
      - app-network

volumes:
  minio_data:
    driver: local

networks:
  app-network:
    driver: bridge